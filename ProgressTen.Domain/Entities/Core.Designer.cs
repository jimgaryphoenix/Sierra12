//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Core", "FK_Event_EventType", "EventType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProgressTen.Domain.Entities.EventType), "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProgressTen.Domain.Entities.Event), true)]
[assembly: EdmRelationshipAttribute("Core", "FK_Message_MessageScope", "MessageScope", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProgressTen.Domain.Entities.MessageScope), "Message", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProgressTen.Domain.Entities.Message), true)]
[assembly: EdmRelationshipAttribute("Core", "FK_Event_Location", "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProgressTen.Domain.Entities.Location), "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProgressTen.Domain.Entities.Event), true)]
[assembly: EdmRelationshipAttribute("Core", "FK_Result_Driver", "Driver", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProgressTen.Domain.Entities.Driver), "Result", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProgressTen.Domain.Entities.Result), true)]
[assembly: EdmRelationshipAttribute("Core", "FK_Result_Event", "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProgressTen.Domain.Entities.Event), "Result", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProgressTen.Domain.Entities.Result), true)]
[assembly: EdmRelationshipAttribute("Core", "FK_Score_Result", "Result", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProgressTen.Domain.Entities.Result), "Score", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProgressTen.Domain.Entities.Score), true)]
[assembly: EdmRelationshipAttribute("Core", "FK_Club_Region", "Region", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProgressTen.Domain.Entities.Region), "Club", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProgressTen.Domain.Entities.Club), true)]
[assembly: EdmRelationshipAttribute("Core", "FK_Driver_Club", "Club", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProgressTen.Domain.Entities.Club), "Driver", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProgressTen.Domain.Entities.Driver), true)]
[assembly: EdmRelationshipAttribute("Core", "FK_Event_Club", "Club", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProgressTen.Domain.Entities.Club), "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProgressTen.Domain.Entities.Event), true)]
[assembly: EdmRelationshipAttribute("Core", "FK_Location_Club", "Club", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProgressTen.Domain.Entities.Club), "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProgressTen.Domain.Entities.Location), true)]
[assembly: EdmRelationshipAttribute("Core", "FK_Club_Driver", "Driver", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProgressTen.Domain.Entities.Driver), "Club", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProgressTen.Domain.Entities.Club), true)]
[assembly: EdmRelationshipAttribute("Core", "FK_ClubPresident_Driver", "Driver", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProgressTen.Domain.Entities.Driver), "Club", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProgressTen.Domain.Entities.Club), true)]
[assembly: EdmRelationshipAttribute("Core", "FK_Series_Club", "Club", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProgressTen.Domain.Entities.Club), "Series", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProgressTen.Domain.Entities.Series), true)]
[assembly: EdmRelationshipAttribute("Core", "FK_Event_Series", "Series", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProgressTen.Domain.Entities.Series), "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProgressTen.Domain.Entities.Event), true)]
[assembly: EdmRelationshipAttribute("Core", "FK_SeriesClass_Series", "Series", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProgressTen.Domain.Entities.Series), "SeriesClass", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProgressTen.Domain.Entities.SeriesClass), true)]
[assembly: EdmRelationshipAttribute("Core", "FK_Result_Class", "Class", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProgressTen.Domain.Entities.Class), "Result", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProgressTen.Domain.Entities.Result), true)]
[assembly: EdmRelationshipAttribute("Core", "FK_SeriesClass_Class", "Class", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProgressTen.Domain.Entities.Class), "SeriesClass", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProgressTen.Domain.Entities.SeriesClass), true)]

#endregion

namespace ProgressTen.Domain.Entities
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class CoreContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new CoreContainer object using the connection string found in the 'CoreContainer' section of the application configuration file.
        /// </summary>
        public CoreContainer() : base("name=CoreContainer", "CoreContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CoreContainer object.
        /// </summary>
        public CoreContainer(string connectionString) : base(connectionString, "CoreContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CoreContainer object.
        /// </summary>
        public CoreContainer(EntityConnection connection) : base(connection, "CoreContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Event> Events
        {
            get
            {
                if ((_Events == null))
                {
                    _Events = base.CreateObjectSet<Event>("Events");
                }
                return _Events;
            }
        }
        private ObjectSet<Event> _Events;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventType> EventTypes
        {
            get
            {
                if ((_EventTypes == null))
                {
                    _EventTypes = base.CreateObjectSet<EventType>("EventTypes");
                }
                return _EventTypes;
            }
        }
        private ObjectSet<EventType> _EventTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Location> Locations
        {
            get
            {
                if ((_Locations == null))
                {
                    _Locations = base.CreateObjectSet<Location>("Locations");
                }
                return _Locations;
            }
        }
        private ObjectSet<Location> _Locations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MessageScope> MessageScopes
        {
            get
            {
                if ((_MessageScopes == null))
                {
                    _MessageScopes = base.CreateObjectSet<MessageScope>("MessageScopes");
                }
                return _MessageScopes;
            }
        }
        private ObjectSet<MessageScope> _MessageScopes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Region> Regions
        {
            get
            {
                if ((_Regions == null))
                {
                    _Regions = base.CreateObjectSet<Region>("Regions");
                }
                return _Regions;
            }
        }
        private ObjectSet<Region> _Regions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Message> Messages
        {
            get
            {
                if ((_Messages == null))
                {
                    _Messages = base.CreateObjectSet<Message>("Messages");
                }
                return _Messages;
            }
        }
        private ObjectSet<Message> _Messages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Driver> Drivers
        {
            get
            {
                if ((_Drivers == null))
                {
                    _Drivers = base.CreateObjectSet<Driver>("Drivers");
                }
                return _Drivers;
            }
        }
        private ObjectSet<Driver> _Drivers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Result> Results
        {
            get
            {
                if ((_Results == null))
                {
                    _Results = base.CreateObjectSet<Result>("Results");
                }
                return _Results;
            }
        }
        private ObjectSet<Result> _Results;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Score> Scores
        {
            get
            {
                if ((_Scores == null))
                {
                    _Scores = base.CreateObjectSet<Score>("Scores");
                }
                return _Scores;
            }
        }
        private ObjectSet<Score> _Scores;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<State> States
        {
            get
            {
                if ((_States == null))
                {
                    _States = base.CreateObjectSet<State>("States");
                }
                return _States;
            }
        }
        private ObjectSet<State> _States;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Country> Countries
        {
            get
            {
                if ((_Countries == null))
                {
                    _Countries = base.CreateObjectSet<Country>("Countries");
                }
                return _Countries;
            }
        }
        private ObjectSet<Country> _Countries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Club> Clubs
        {
            get
            {
                if ((_Clubs == null))
                {
                    _Clubs = base.CreateObjectSet<Club>("Clubs");
                }
                return _Clubs;
            }
        }
        private ObjectSet<Club> _Clubs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Series> Series
        {
            get
            {
                if ((_Series == null))
                {
                    _Series = base.CreateObjectSet<Series>("Series");
                }
                return _Series;
            }
        }
        private ObjectSet<Series> _Series;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SeriesClass> SeriesClasses
        {
            get
            {
                if ((_SeriesClasses == null))
                {
                    _SeriesClasses = base.CreateObjectSet<SeriesClass>("SeriesClasses");
                }
                return _SeriesClasses;
            }
        }
        private ObjectSet<SeriesClass> _SeriesClasses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Class> Classes
        {
            get
            {
                if ((_Classes == null))
                {
                    _Classes = base.CreateObjectSet<Class>("Classes");
                }
                return _Classes;
            }
        }
        private ObjectSet<Class> _Classes;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Events EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEvents(Event @event)
        {
            base.AddObject("Events", @event);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EventTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventTypes(EventType eventType)
        {
            base.AddObject("EventTypes", eventType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Locations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLocations(Location location)
        {
            base.AddObject("Locations", location);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MessageScopes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMessageScopes(MessageScope messageScope)
        {
            base.AddObject("MessageScopes", messageScope);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Regions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRegions(Region region)
        {
            base.AddObject("Regions", region);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Messages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMessages(Message message)
        {
            base.AddObject("Messages", message);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Drivers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDrivers(Driver driver)
        {
            base.AddObject("Drivers", driver);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Results EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResults(Result result)
        {
            base.AddObject("Results", result);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Scores EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToScores(Score score)
        {
            base.AddObject("Scores", score);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the States EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStates(State state)
        {
            base.AddObject("States", state);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Countries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCountries(Country country)
        {
            base.AddObject("Countries", country);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Clubs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClubs(Club club)
        {
            base.AddObject("Clubs", club);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Series EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSeries(Series series)
        {
            base.AddObject("Series", series);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SeriesClasses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSeriesClasses(SeriesClass seriesClass)
        {
            base.AddObject("SeriesClasses", seriesClass);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Classes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClasses(Class @class)
        {
            base.AddObject("Classes", @class);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Core", Name="Class")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Class : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Class object.
        /// </summary>
        /// <param name="classId">Initial value of the ClassId property.</param>
        /// <param name="displayOrder">Initial value of the DisplayOrder property.</param>
        public static Class CreateClass(global::System.Int32 classId, global::System.Int32 displayOrder)
        {
            Class @class = new Class();
            @class.ClassId = classId;
            @class.DisplayOrder = displayOrder;
            return @class;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClassId
        {
            get
            {
                return _ClassId;
            }
            set
            {
                if (_ClassId != value)
                {
                    OnClassIdChanging(value);
                    ReportPropertyChanging("ClassId");
                    _ClassId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ClassId");
                    OnClassIdChanged();
                }
            }
        }
        private global::System.Int32 _ClassId;
        partial void OnClassIdChanging(global::System.Int32 value);
        partial void OnClassIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DisplayOrder
        {
            get
            {
                return _DisplayOrder;
            }
            set
            {
                OnDisplayOrderChanging(value);
                ReportPropertyChanging("DisplayOrder");
                _DisplayOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisplayOrder");
                OnDisplayOrderChanged();
            }
        }
        private global::System.Int32 _DisplayOrder;
        partial void OnDisplayOrderChanging(global::System.Int32 value);
        partial void OnDisplayOrderChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK_Result_Class", "Result")]
        public EntityCollection<Result> Results
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Result>("Core.FK_Result_Class", "Result");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Result>("Core.FK_Result_Class", "Result", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK_SeriesClass_Class", "SeriesClass")]
        public EntityCollection<SeriesClass> SeriesClasses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SeriesClass>("Core.FK_SeriesClass_Class", "SeriesClass");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SeriesClass>("Core.FK_SeriesClass_Class", "SeriesClass", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Core", Name="Club")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Club : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Club object.
        /// </summary>
        /// <param name="clubId">Initial value of the ClubId property.</param>
        /// <param name="fullName">Initial value of the FullName property.</param>
        /// <param name="acronym">Initial value of the Acronym property.</param>
        /// <param name="city">Initial value of the City property.</param>
        /// <param name="state">Initial value of the State property.</param>
        /// <param name="regionId">Initial value of the RegionId property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="country">Initial value of the Country property.</param>
        public static Club CreateClub(global::System.Int32 clubId, global::System.String fullName, global::System.String acronym, global::System.String city, global::System.String state, global::System.Int32 regionId, global::System.DateTime dateCreated, global::System.String country)
        {
            Club club = new Club();
            club.ClubId = clubId;
            club.FullName = fullName;
            club.Acronym = acronym;
            club.City = city;
            club.State = state;
            club.RegionId = regionId;
            club.DateCreated = dateCreated;
            club.Country = country;
            return club;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClubId
        {
            get
            {
                return _ClubId;
            }
            set
            {
                if (_ClubId != value)
                {
                    OnClubIdChanging(value);
                    ReportPropertyChanging("ClubId");
                    _ClubId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ClubId");
                    OnClubIdChanged();
                }
            }
        }
        private global::System.Int32 _ClubId;
        partial void OnClubIdChanging(global::System.Int32 value);
        partial void OnClubIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Acronym
        {
            get
            {
                return _Acronym;
            }
            set
            {
                OnAcronymChanging(value);
                ReportPropertyChanging("Acronym");
                _Acronym = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Acronym");
                OnAcronymChanged();
            }
        }
        private global::System.String _Acronym;
        partial void OnAcronymChanging(global::System.String value);
        partial void OnAcronymChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RegionId
        {
            get
            {
                return _RegionId;
            }
            set
            {
                OnRegionIdChanging(value);
                ReportPropertyChanging("RegionId");
                _RegionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegionId");
                OnRegionIdChanged();
            }
        }
        private global::System.Int32 _RegionId;
        partial void OnRegionIdChanging(global::System.Int32 value);
        partial void OnRegionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateActivated
        {
            get
            {
                return _DateActivated;
            }
            set
            {
                OnDateActivatedChanging(value);
                ReportPropertyChanging("DateActivated");
                _DateActivated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateActivated");
                OnDateActivatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateActivated;
        partial void OnDateActivatedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateActivatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateCancelled
        {
            get
            {
                return _DateCancelled;
            }
            set
            {
                OnDateCancelledChanging(value);
                ReportPropertyChanging("DateCancelled");
                _DateCancelled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCancelled");
                OnDateCancelledChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateCancelled;
        partial void OnDateCancelledChanging(Nullable<global::System.DateTime> value);
        partial void OnDateCancelledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RegisteringDriverId
        {
            get
            {
                return _RegisteringDriverId;
            }
            set
            {
                OnRegisteringDriverIdChanging(value);
                ReportPropertyChanging("RegisteringDriverId");
                _RegisteringDriverId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegisteringDriverId");
                OnRegisteringDriverIdChanged();
            }
        }
        private Nullable<global::System.Int32> _RegisteringDriverId;
        partial void OnRegisteringDriverIdChanging(Nullable<global::System.Int32> value);
        partial void OnRegisteringDriverIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrentPresidentDriverId
        {
            get
            {
                return _CurrentPresidentDriverId;
            }
            set
            {
                OnCurrentPresidentDriverIdChanging(value);
                ReportPropertyChanging("CurrentPresidentDriverId");
                _CurrentPresidentDriverId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrentPresidentDriverId");
                OnCurrentPresidentDriverIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrentPresidentDriverId;
        partial void OnCurrentPresidentDriverIdChanging(Nullable<global::System.Int32> value);
        partial void OnCurrentPresidentDriverIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK_Club_Region", "Region")]
        public Region Region
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("Core.FK_Club_Region", "Region").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("Core.FK_Club_Region", "Region").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Region> RegionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("Core.FK_Club_Region", "Region");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Region>("Core.FK_Club_Region", "Region", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK_Driver_Club", "Driver")]
        public EntityCollection<Driver> Drivers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Driver>("Core.FK_Driver_Club", "Driver");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Driver>("Core.FK_Driver_Club", "Driver", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK_Event_Club", "Event")]
        public EntityCollection<Event> Events
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Event>("Core.FK_Event_Club", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Event>("Core.FK_Event_Club", "Event", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK_Location_Club", "Location")]
        public EntityCollection<Location> Locations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Location>("Core.FK_Location_Club", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Location>("Core.FK_Location_Club", "Location", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK_Club_Driver", "Driver")]
        public Driver RegisteringDriver
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Driver>("Core.FK_Club_Driver", "Driver").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Driver>("Core.FK_Club_Driver", "Driver").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Driver> RegisteringDriverReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Driver>("Core.FK_Club_Driver", "Driver");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Driver>("Core.FK_Club_Driver", "Driver", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK_ClubPresident_Driver", "Driver")]
        public Driver CurrentPresident
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Driver>("Core.FK_ClubPresident_Driver", "Driver").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Driver>("Core.FK_ClubPresident_Driver", "Driver").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Driver> CurrentPresidentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Driver>("Core.FK_ClubPresident_Driver", "Driver");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Driver>("Core.FK_ClubPresident_Driver", "Driver", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK_Series_Club", "Series")]
        public EntityCollection<Series> Series
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Series>("Core.FK_Series_Club", "Series");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Series>("Core.FK_Series_Club", "Series", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Core", Name="Country")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Country : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Country object.
        /// </summary>
        /// <param name="countryId">Initial value of the CountryId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        public static Country CreateCountry(global::System.Int32 countryId, global::System.String name, global::System.String code)
        {
            Country country = new Country();
            country.CountryId = countryId;
            country.Name = name;
            country.Code = code;
            return country;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryId
        {
            get
            {
                return _CountryId;
            }
            set
            {
                if (_CountryId != value)
                {
                    OnCountryIdChanging(value);
                    ReportPropertyChanging("CountryId");
                    _CountryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CountryId");
                    OnCountryIdChanged();
                }
            }
        }
        private global::System.Int32 _CountryId;
        partial void OnCountryIdChanging(global::System.Int32 value);
        partial void OnCountryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Core", Name="Driver")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Driver : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Driver object.
        /// </summary>
        /// <param name="driverId">Initial value of the DriverId property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="emailAddress">Initial value of the EmailAddress property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static Driver CreateDriver(global::System.Int32 driverId, global::System.String firstName, global::System.String lastName, global::System.String emailAddress, global::System.DateTime dateCreated)
        {
            Driver driver = new Driver();
            driver.DriverId = driverId;
            driver.FirstName = firstName;
            driver.LastName = lastName;
            driver.EmailAddress = emailAddress;
            driver.DateCreated = dateCreated;
            return driver;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DriverId
        {
            get
            {
                return _DriverId;
            }
            set
            {
                if (_DriverId != value)
                {
                    OnDriverIdChanging(value);
                    ReportPropertyChanging("DriverId");
                    _DriverId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DriverId");
                    OnDriverIdChanged();
                }
            }
        }
        private global::System.Int32 _DriverId;
        partial void OnDriverIdChanging(global::System.Int32 value);
        partial void OnDriverIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RccScreenName
        {
            get
            {
                return _RccScreenName;
            }
            set
            {
                OnRccScreenNameChanging(value);
                ReportPropertyChanging("RccScreenName");
                _RccScreenName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RccScreenName");
                OnRccScreenNameChanged();
            }
        }
        private global::System.String _RccScreenName;
        partial void OnRccScreenNameChanging(global::System.String value);
        partial void OnRccScreenNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> HomeClubId
        {
            get
            {
                return _HomeClubId;
            }
            set
            {
                OnHomeClubIdChanging(value);
                ReportPropertyChanging("HomeClubId");
                _HomeClubId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HomeClubId");
                OnHomeClubIdChanged();
            }
        }
        private Nullable<global::System.Int32> _HomeClubId;
        partial void OnHomeClubIdChanging(Nullable<global::System.Int32> value);
        partial void OnHomeClubIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmailAddress
        {
            get
            {
                return _EmailAddress;
            }
            set
            {
                OnEmailAddressChanging(value);
                ReportPropertyChanging("EmailAddress");
                _EmailAddress = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EmailAddress");
                OnEmailAddressChanged();
            }
        }
        private global::System.String _EmailAddress;
        partial void OnEmailAddressChanging(global::System.String value);
        partial void OnEmailAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateActivated
        {
            get
            {
                return _DateActivated;
            }
            set
            {
                OnDateActivatedChanging(value);
                ReportPropertyChanging("DateActivated");
                _DateActivated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateActivated");
                OnDateActivatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateActivated;
        partial void OnDateActivatedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateActivatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateCancelled
        {
            get
            {
                return _DateCancelled;
            }
            set
            {
                OnDateCancelledChanging(value);
                ReportPropertyChanging("DateCancelled");
                _DateCancelled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCancelled");
                OnDateCancelledChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateCancelled;
        partial void OnDateCancelledChanging(Nullable<global::System.DateTime> value);
        partial void OnDateCancelledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> LoginUserId
        {
            get
            {
                return _LoginUserId;
            }
            set
            {
                OnLoginUserIdChanging(value);
                ReportPropertyChanging("LoginUserId");
                _LoginUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoginUserId");
                OnLoginUserIdChanged();
            }
        }
        private Nullable<global::System.Guid> _LoginUserId;
        partial void OnLoginUserIdChanging(Nullable<global::System.Guid> value);
        partial void OnLoginUserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK_Result_Driver", "Result")]
        public EntityCollection<Result> Results
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Result>("Core.FK_Result_Driver", "Result");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Result>("Core.FK_Result_Driver", "Result", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK_Driver_Club", "Club")]
        public Club HomeClub
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Club>("Core.FK_Driver_Club", "Club").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Club>("Core.FK_Driver_Club", "Club").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Club> HomeClubReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Club>("Core.FK_Driver_Club", "Club");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Club>("Core.FK_Driver_Club", "Club", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK_Club_Driver", "Club")]
        public EntityCollection<Club> Clubs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Club>("Core.FK_Club_Driver", "Club");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Club>("Core.FK_Club_Driver", "Club", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK_ClubPresident_Driver", "Club")]
        public EntityCollection<Club> Clubs_1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Club>("Core.FK_ClubPresident_Driver", "Club");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Club>("Core.FK_ClubPresident_Driver", "Club", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Core", Name="Event")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Event : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Event object.
        /// </summary>
        /// <param name="eventId">Initial value of the EventId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="eventTypeId">Initial value of the EventTypeId property.</param>
        /// <param name="clubId">Initial value of the ClubId property.</param>
        /// <param name="locationId">Initial value of the LocationId property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="numberOfCourses">Initial value of the NumberOfCourses property.</param>
        public static Event CreateEvent(global::System.Int32 eventId, global::System.String name, global::System.Int32 eventTypeId, global::System.Int32 clubId, global::System.Int32 locationId, global::System.DateTime date, global::System.DateTime dateCreated, global::System.Int32 numberOfCourses)
        {
            Event @event = new Event();
            @event.EventId = eventId;
            @event.Name = name;
            @event.EventTypeId = eventTypeId;
            @event.ClubId = clubId;
            @event.LocationId = locationId;
            @event.Date = date;
            @event.DateCreated = dateCreated;
            @event.NumberOfCourses = numberOfCourses;
            return @event;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventId
        {
            get
            {
                return _EventId;
            }
            set
            {
                if (_EventId != value)
                {
                    OnEventIdChanging(value);
                    ReportPropertyChanging("EventId");
                    _EventId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EventId");
                    OnEventIdChanged();
                }
            }
        }
        private global::System.Int32 _EventId;
        partial void OnEventIdChanging(global::System.Int32 value);
        partial void OnEventIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventTypeId
        {
            get
            {
                return _EventTypeId;
            }
            set
            {
                OnEventTypeIdChanging(value);
                ReportPropertyChanging("EventTypeId");
                _EventTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventTypeId");
                OnEventTypeIdChanged();
            }
        }
        private global::System.Int32 _EventTypeId;
        partial void OnEventTypeIdChanging(global::System.Int32 value);
        partial void OnEventTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClubId
        {
            get
            {
                return _ClubId;
            }
            set
            {
                OnClubIdChanging(value);
                ReportPropertyChanging("ClubId");
                _ClubId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClubId");
                OnClubIdChanged();
            }
        }
        private global::System.Int32 _ClubId;
        partial void OnClubIdChanging(global::System.Int32 value);
        partial void OnClubIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LocationId
        {
            get
            {
                return _LocationId;
            }
            set
            {
                OnLocationIdChanging(value);
                ReportPropertyChanging("LocationId");
                _LocationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LocationId");
                OnLocationIdChanged();
            }
        }
        private global::System.Int32 _LocationId;
        partial void OnLocationIdChanging(global::System.Int32 value);
        partial void OnLocationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SeriesId
        {
            get
            {
                return _SeriesId;
            }
            set
            {
                OnSeriesIdChanging(value);
                ReportPropertyChanging("SeriesId");
                _SeriesId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SeriesId");
                OnSeriesIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SeriesId;
        partial void OnSeriesIdChanging(Nullable<global::System.Int32> value);
        partial void OnSeriesIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateCancelled
        {
            get
            {
                return _DateCancelled;
            }
            set
            {
                OnDateCancelledChanging(value);
                ReportPropertyChanging("DateCancelled");
                _DateCancelled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCancelled");
                OnDateCancelledChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateCancelled;
        partial void OnDateCancelledChanging(Nullable<global::System.DateTime> value);
        partial void OnDateCancelledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberOfCourses
        {
            get
            {
                return _NumberOfCourses;
            }
            set
            {
                OnNumberOfCoursesChanging(value);
                ReportPropertyChanging("NumberOfCourses");
                _NumberOfCourses = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberOfCourses");
                OnNumberOfCoursesChanged();
            }
        }
        private global::System.Int32 _NumberOfCourses;
        partial void OnNumberOfCoursesChanging(global::System.Int32 value);
        partial void OnNumberOfCoursesChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK_Event_EventType", "EventType")]
        public EventType EventType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventType>("Core.FK_Event_EventType", "EventType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventType>("Core.FK_Event_EventType", "EventType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EventType> EventTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventType>("Core.FK_Event_EventType", "EventType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EventType>("Core.FK_Event_EventType", "EventType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK_Event_Location", "Location")]
        public Location Location
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("Core.FK_Event_Location", "Location").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("Core.FK_Event_Location", "Location").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Location> LocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("Core.FK_Event_Location", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Location>("Core.FK_Event_Location", "Location", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK_Result_Event", "Result")]
        public EntityCollection<Result> Results
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Result>("Core.FK_Result_Event", "Result");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Result>("Core.FK_Result_Event", "Result", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK_Event_Club", "Club")]
        public Club Club
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Club>("Core.FK_Event_Club", "Club").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Club>("Core.FK_Event_Club", "Club").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Club> ClubReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Club>("Core.FK_Event_Club", "Club");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Club>("Core.FK_Event_Club", "Club", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK_Event_Series", "Series")]
        public Series Series
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Series>("Core.FK_Event_Series", "Series").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Series>("Core.FK_Event_Series", "Series").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Series> SeriesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Series>("Core.FK_Event_Series", "Series");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Series>("Core.FK_Event_Series", "Series", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Core", Name="EventType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EventType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EventType object.
        /// </summary>
        /// <param name="eventTypeId">Initial value of the EventTypeId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static EventType CreateEventType(global::System.Int32 eventTypeId, global::System.String name)
        {
            EventType eventType = new EventType();
            eventType.EventTypeId = eventTypeId;
            eventType.Name = name;
            return eventType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventTypeId
        {
            get
            {
                return _EventTypeId;
            }
            set
            {
                if (_EventTypeId != value)
                {
                    OnEventTypeIdChanging(value);
                    ReportPropertyChanging("EventTypeId");
                    _EventTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EventTypeId");
                    OnEventTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _EventTypeId;
        partial void OnEventTypeIdChanging(global::System.Int32 value);
        partial void OnEventTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK_Event_EventType", "Event")]
        public EntityCollection<Event> Events
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Event>("Core.FK_Event_EventType", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Event>("Core.FK_Event_EventType", "Event", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Core", Name="Location")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Location : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Location object.
        /// </summary>
        /// <param name="locationId">Initial value of the LocationId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="url">Initial value of the Url property.</param>
        /// <param name="clubId">Initial value of the ClubId property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static Location CreateLocation(global::System.Int32 locationId, global::System.String name, global::System.String url, global::System.Int32 clubId, global::System.DateTime dateCreated)
        {
            Location location = new Location();
            location.LocationId = locationId;
            location.Name = name;
            location.Url = url;
            location.ClubId = clubId;
            location.DateCreated = dateCreated;
            return location;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LocationId
        {
            get
            {
                return _LocationId;
            }
            set
            {
                if (_LocationId != value)
                {
                    OnLocationIdChanging(value);
                    ReportPropertyChanging("LocationId");
                    _LocationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LocationId");
                    OnLocationIdChanged();
                }
            }
        }
        private global::System.Int32 _LocationId;
        partial void OnLocationIdChanging(global::System.Int32 value);
        partial void OnLocationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Url
        {
            get
            {
                return _Url;
            }
            set
            {
                OnUrlChanging(value);
                ReportPropertyChanging("Url");
                _Url = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Url");
                OnUrlChanged();
            }
        }
        private global::System.String _Url;
        partial void OnUrlChanging(global::System.String value);
        partial void OnUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClubId
        {
            get
            {
                return _ClubId;
            }
            set
            {
                OnClubIdChanging(value);
                ReportPropertyChanging("ClubId");
                _ClubId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClubId");
                OnClubIdChanged();
            }
        }
        private global::System.Int32 _ClubId;
        partial void OnClubIdChanging(global::System.Int32 value);
        partial void OnClubIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK_Event_Location", "Event")]
        public EntityCollection<Event> Events
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Event>("Core.FK_Event_Location", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Event>("Core.FK_Event_Location", "Event", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK_Location_Club", "Club")]
        public Club Club
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Club>("Core.FK_Location_Club", "Club").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Club>("Core.FK_Location_Club", "Club").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Club> ClubReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Club>("Core.FK_Location_Club", "Club");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Club>("Core.FK_Location_Club", "Club", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Core", Name="Message")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Message : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Message object.
        /// </summary>
        /// <param name="messageID">Initial value of the MessageID property.</param>
        /// <param name="authorUserId">Initial value of the AuthorUserId property.</param>
        /// <param name="messageScopeId">Initial value of the MessageScopeId property.</param>
        /// <param name="messageBody">Initial value of the MessageBody property.</param>
        /// <param name="dateActive">Initial value of the DateActive property.</param>
        /// <param name="dateExpire">Initial value of the DateExpire property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static Message CreateMessage(global::System.Int32 messageID, global::System.Int32 authorUserId, global::System.Int32 messageScopeId, global::System.String messageBody, global::System.DateTime dateActive, global::System.DateTime dateExpire, global::System.DateTime dateCreated)
        {
            Message message = new Message();
            message.MessageID = messageID;
            message.AuthorUserId = authorUserId;
            message.MessageScopeId = messageScopeId;
            message.MessageBody = messageBody;
            message.DateActive = dateActive;
            message.DateExpire = dateExpire;
            message.DateCreated = dateCreated;
            return message;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MessageID
        {
            get
            {
                return _MessageID;
            }
            set
            {
                if (_MessageID != value)
                {
                    OnMessageIDChanging(value);
                    ReportPropertyChanging("MessageID");
                    _MessageID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MessageID");
                    OnMessageIDChanged();
                }
            }
        }
        private global::System.Int32 _MessageID;
        partial void OnMessageIDChanging(global::System.Int32 value);
        partial void OnMessageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AuthorUserId
        {
            get
            {
                return _AuthorUserId;
            }
            set
            {
                OnAuthorUserIdChanging(value);
                ReportPropertyChanging("AuthorUserId");
                _AuthorUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AuthorUserId");
                OnAuthorUserIdChanged();
            }
        }
        private global::System.Int32 _AuthorUserId;
        partial void OnAuthorUserIdChanging(global::System.Int32 value);
        partial void OnAuthorUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MessageScopeId
        {
            get
            {
                return _MessageScopeId;
            }
            set
            {
                OnMessageScopeIdChanging(value);
                ReportPropertyChanging("MessageScopeId");
                _MessageScopeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MessageScopeId");
                OnMessageScopeIdChanged();
            }
        }
        private global::System.Int32 _MessageScopeId;
        partial void OnMessageScopeIdChanging(global::System.Int32 value);
        partial void OnMessageScopeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MessageBody
        {
            get
            {
                return _MessageBody;
            }
            set
            {
                OnMessageBodyChanging(value);
                ReportPropertyChanging("MessageBody");
                _MessageBody = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MessageBody");
                OnMessageBodyChanged();
            }
        }
        private global::System.String _MessageBody;
        partial void OnMessageBodyChanging(global::System.String value);
        partial void OnMessageBodyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateActive
        {
            get
            {
                return _DateActive;
            }
            set
            {
                OnDateActiveChanging(value);
                ReportPropertyChanging("DateActive");
                _DateActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateActive");
                OnDateActiveChanged();
            }
        }
        private global::System.DateTime _DateActive;
        partial void OnDateActiveChanging(global::System.DateTime value);
        partial void OnDateActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateExpire
        {
            get
            {
                return _DateExpire;
            }
            set
            {
                OnDateExpireChanging(value);
                ReportPropertyChanging("DateExpire");
                _DateExpire = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateExpire");
                OnDateExpireChanged();
            }
        }
        private global::System.DateTime _DateExpire;
        partial void OnDateExpireChanging(global::System.DateTime value);
        partial void OnDateExpireChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK_Message_MessageScope", "MessageScope")]
        public MessageScope MessageScope
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MessageScope>("Core.FK_Message_MessageScope", "MessageScope").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MessageScope>("Core.FK_Message_MessageScope", "MessageScope").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MessageScope> MessageScopeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MessageScope>("Core.FK_Message_MessageScope", "MessageScope");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MessageScope>("Core.FK_Message_MessageScope", "MessageScope", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Core", Name="MessageScope")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MessageScope : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MessageScope object.
        /// </summary>
        /// <param name="messageScopeId">Initial value of the MessageScopeId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static MessageScope CreateMessageScope(global::System.Int32 messageScopeId, global::System.String name)
        {
            MessageScope messageScope = new MessageScope();
            messageScope.MessageScopeId = messageScopeId;
            messageScope.Name = name;
            return messageScope;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MessageScopeId
        {
            get
            {
                return _MessageScopeId;
            }
            set
            {
                if (_MessageScopeId != value)
                {
                    OnMessageScopeIdChanging(value);
                    ReportPropertyChanging("MessageScopeId");
                    _MessageScopeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MessageScopeId");
                    OnMessageScopeIdChanged();
                }
            }
        }
        private global::System.Int32 _MessageScopeId;
        partial void OnMessageScopeIdChanging(global::System.Int32 value);
        partial void OnMessageScopeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK_Message_MessageScope", "Message")]
        public EntityCollection<Message> Messages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Message>("Core.FK_Message_MessageScope", "Message");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Message>("Core.FK_Message_MessageScope", "Message", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Core", Name="Region")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Region : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Region object.
        /// </summary>
        /// <param name="regionId">Initial value of the RegionId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="states">Initial value of the States property.</param>
        public static Region CreateRegion(global::System.Int32 regionId, global::System.String name, global::System.String states)
        {
            Region region = new Region();
            region.RegionId = regionId;
            region.Name = name;
            region.States = states;
            return region;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RegionId
        {
            get
            {
                return _RegionId;
            }
            set
            {
                if (_RegionId != value)
                {
                    OnRegionIdChanging(value);
                    ReportPropertyChanging("RegionId");
                    _RegionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RegionId");
                    OnRegionIdChanged();
                }
            }
        }
        private global::System.Int32 _RegionId;
        partial void OnRegionIdChanging(global::System.Int32 value);
        partial void OnRegionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String States
        {
            get
            {
                return _States;
            }
            set
            {
                OnStatesChanging(value);
                ReportPropertyChanging("States");
                _States = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("States");
                OnStatesChanged();
            }
        }
        private global::System.String _States;
        partial void OnStatesChanging(global::System.String value);
        partial void OnStatesChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK_Club_Region", "Club")]
        public EntityCollection<Club> Clubs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Club>("Core.FK_Club_Region", "Club");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Club>("Core.FK_Club_Region", "Club", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Core", Name="Result")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Result : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Result object.
        /// </summary>
        /// <param name="resultId">Initial value of the ResultId property.</param>
        /// <param name="eventId">Initial value of the EventId property.</param>
        /// <param name="driverId">Initial value of the DriverId property.</param>
        /// <param name="classId">Initial value of the ClassId property.</param>
        /// <param name="dateModified">Initial value of the DateModified property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static Result CreateResult(global::System.Int32 resultId, global::System.Int32 eventId, global::System.Int32 driverId, global::System.Int32 classId, global::System.DateTime dateModified, global::System.DateTime dateCreated)
        {
            Result result = new Result();
            result.ResultId = resultId;
            result.EventId = eventId;
            result.DriverId = driverId;
            result.ClassId = classId;
            result.DateModified = dateModified;
            result.DateCreated = dateCreated;
            return result;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResultId
        {
            get
            {
                return _ResultId;
            }
            set
            {
                if (_ResultId != value)
                {
                    OnResultIdChanging(value);
                    ReportPropertyChanging("ResultId");
                    _ResultId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ResultId");
                    OnResultIdChanged();
                }
            }
        }
        private global::System.Int32 _ResultId;
        partial void OnResultIdChanging(global::System.Int32 value);
        partial void OnResultIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventId
        {
            get
            {
                return _EventId;
            }
            set
            {
                OnEventIdChanging(value);
                ReportPropertyChanging("EventId");
                _EventId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventId");
                OnEventIdChanged();
            }
        }
        private global::System.Int32 _EventId;
        partial void OnEventIdChanging(global::System.Int32 value);
        partial void OnEventIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DriverId
        {
            get
            {
                return _DriverId;
            }
            set
            {
                OnDriverIdChanging(value);
                ReportPropertyChanging("DriverId");
                _DriverId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DriverId");
                OnDriverIdChanged();
            }
        }
        private global::System.Int32 _DriverId;
        partial void OnDriverIdChanging(global::System.Int32 value);
        partial void OnDriverIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClassId
        {
            get
            {
                return _ClassId;
            }
            set
            {
                OnClassIdChanging(value);
                ReportPropertyChanging("ClassId");
                _ClassId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClassId");
                OnClassIdChanged();
            }
        }
        private global::System.Int32 _ClassId;
        partial void OnClassIdChanging(global::System.Int32 value);
        partial void OnClassIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PointsEarned
        {
            get
            {
                return _PointsEarned;
            }
            set
            {
                OnPointsEarnedChanging(value);
                ReportPropertyChanging("PointsEarned");
                _PointsEarned = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PointsEarned");
                OnPointsEarnedChanged();
            }
        }
        private Nullable<global::System.Int32> _PointsEarned;
        partial void OnPointsEarnedChanging(Nullable<global::System.Int32> value);
        partial void OnPointsEarnedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateModified
        {
            get
            {
                return _DateModified;
            }
            set
            {
                OnDateModifiedChanging(value);
                ReportPropertyChanging("DateModified");
                _DateModified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateModified");
                OnDateModifiedChanged();
            }
        }
        private global::System.DateTime _DateModified;
        partial void OnDateModifiedChanging(global::System.DateTime value);
        partial void OnDateModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Place
        {
            get
            {
                return _Place;
            }
            set
            {
                OnPlaceChanging(value);
                ReportPropertyChanging("Place");
                _Place = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Place");
                OnPlaceChanged();
            }
        }
        private Nullable<global::System.Int32> _Place;
        partial void OnPlaceChanging(Nullable<global::System.Int32> value);
        partial void OnPlaceChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK_Result_Driver", "Driver")]
        public Driver Driver
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Driver>("Core.FK_Result_Driver", "Driver").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Driver>("Core.FK_Result_Driver", "Driver").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Driver> DriverReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Driver>("Core.FK_Result_Driver", "Driver");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Driver>("Core.FK_Result_Driver", "Driver", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK_Result_Event", "Event")]
        public Event Event
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("Core.FK_Result_Event", "Event").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("Core.FK_Result_Event", "Event").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Event> EventReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("Core.FK_Result_Event", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Event>("Core.FK_Result_Event", "Event", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK_Score_Result", "Score")]
        public EntityCollection<Score> Scores
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Score>("Core.FK_Score_Result", "Score");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Score>("Core.FK_Score_Result", "Score", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK_Result_Class", "Class")]
        public Class Class
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Class>("Core.FK_Result_Class", "Class").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Class>("Core.FK_Result_Class", "Class").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Class> ClassReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Class>("Core.FK_Result_Class", "Class");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Class>("Core.FK_Result_Class", "Class", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Core", Name="Score")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Score : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Score object.
        /// </summary>
        /// <param name="scoreId">Initial value of the ScoreId property.</param>
        /// <param name="resultId">Initial value of the ResultId property.</param>
        /// <param name="courseNumber">Initial value of the CourseNumber property.</param>
        public static Score CreateScore(global::System.Int32 scoreId, global::System.Int32 resultId, global::System.Int32 courseNumber)
        {
            Score score = new Score();
            score.ScoreId = scoreId;
            score.ResultId = resultId;
            score.CourseNumber = courseNumber;
            return score;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ScoreId
        {
            get
            {
                return _ScoreId;
            }
            set
            {
                if (_ScoreId != value)
                {
                    OnScoreIdChanging(value);
                    ReportPropertyChanging("ScoreId");
                    _ScoreId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ScoreId");
                    OnScoreIdChanged();
                }
            }
        }
        private global::System.Int32 _ScoreId;
        partial void OnScoreIdChanging(global::System.Int32 value);
        partial void OnScoreIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResultId
        {
            get
            {
                return _ResultId;
            }
            set
            {
                OnResultIdChanging(value);
                ReportPropertyChanging("ResultId");
                _ResultId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResultId");
                OnResultIdChanged();
            }
        }
        private global::System.Int32 _ResultId;
        partial void OnResultIdChanging(global::System.Int32 value);
        partial void OnResultIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CourseNumber
        {
            get
            {
                return _CourseNumber;
            }
            set
            {
                OnCourseNumberChanging(value);
                ReportPropertyChanging("CourseNumber");
                _CourseNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CourseNumber");
                OnCourseNumberChanged();
            }
        }
        private global::System.Int32 _CourseNumber;
        partial void OnCourseNumberChanging(global::System.Int32 value);
        partial void OnCourseNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CourseScore
        {
            get
            {
                return _CourseScore;
            }
            set
            {
                OnCourseScoreChanging(value);
                ReportPropertyChanging("CourseScore");
                _CourseScore = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CourseScore");
                OnCourseScoreChanged();
            }
        }
        private Nullable<global::System.Int32> _CourseScore;
        partial void OnCourseScoreChanging(Nullable<global::System.Int32> value);
        partial void OnCourseScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Time
        {
            get
            {
                return _Time;
            }
            set
            {
                OnTimeChanging(value);
                ReportPropertyChanging("Time");
                _Time = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Time");
                OnTimeChanged();
            }
        }
        private Nullable<global::System.Int32> _Time;
        partial void OnTimeChanging(Nullable<global::System.Int32> value);
        partial void OnTimeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK_Score_Result", "Result")]
        public Result Result
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Result>("Core.FK_Score_Result", "Result").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Result>("Core.FK_Score_Result", "Result").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Result> ResultReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Result>("Core.FK_Score_Result", "Result");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Result>("Core.FK_Score_Result", "Result", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Core", Name="Series")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Series : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Series object.
        /// </summary>
        /// <param name="seriesId">Initial value of the SeriesId property.</param>
        /// <param name="clubId">Initial value of the ClubId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="beginDate">Initial value of the BeginDate property.</param>
        public static Series CreateSeries(global::System.Int32 seriesId, global::System.Int32 clubId, global::System.String name, global::System.DateTime dateCreated, global::System.DateTime beginDate)
        {
            Series series = new Series();
            series.SeriesId = seriesId;
            series.ClubId = clubId;
            series.Name = name;
            series.DateCreated = dateCreated;
            series.BeginDate = beginDate;
            return series;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SeriesId
        {
            get
            {
                return _SeriesId;
            }
            set
            {
                if (_SeriesId != value)
                {
                    OnSeriesIdChanging(value);
                    ReportPropertyChanging("SeriesId");
                    _SeriesId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SeriesId");
                    OnSeriesIdChanged();
                }
            }
        }
        private global::System.Int32 _SeriesId;
        partial void OnSeriesIdChanging(global::System.Int32 value);
        partial void OnSeriesIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClubId
        {
            get
            {
                return _ClubId;
            }
            set
            {
                OnClubIdChanging(value);
                ReportPropertyChanging("ClubId");
                _ClubId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClubId");
                OnClubIdChanged();
            }
        }
        private global::System.Int32 _ClubId;
        partial void OnClubIdChanging(global::System.Int32 value);
        partial void OnClubIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateCancelled
        {
            get
            {
                return _DateCancelled;
            }
            set
            {
                OnDateCancelledChanging(value);
                ReportPropertyChanging("DateCancelled");
                _DateCancelled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCancelled");
                OnDateCancelledChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateCancelled;
        partial void OnDateCancelledChanging(Nullable<global::System.DateTime> value);
        partial void OnDateCancelledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime BeginDate
        {
            get
            {
                return _BeginDate;
            }
            set
            {
                OnBeginDateChanging(value);
                ReportPropertyChanging("BeginDate");
                _BeginDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BeginDate");
                OnBeginDateChanged();
            }
        }
        private global::System.DateTime _BeginDate;
        partial void OnBeginDateChanging(global::System.DateTime value);
        partial void OnBeginDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK_Series_Club", "Club")]
        public Club Club
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Club>("Core.FK_Series_Club", "Club").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Club>("Core.FK_Series_Club", "Club").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Club> ClubReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Club>("Core.FK_Series_Club", "Club");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Club>("Core.FK_Series_Club", "Club", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK_Event_Series", "Event")]
        public EntityCollection<Event> Events
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Event>("Core.FK_Event_Series", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Event>("Core.FK_Event_Series", "Event", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK_SeriesClass_Series", "SeriesClass")]
        public EntityCollection<SeriesClass> SeriesClasses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SeriesClass>("Core.FK_SeriesClass_Series", "SeriesClass");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SeriesClass>("Core.FK_SeriesClass_Series", "SeriesClass", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Core", Name="SeriesClass")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SeriesClass : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SeriesClass object.
        /// </summary>
        /// <param name="seriesClassId">Initial value of the SeriesClassId property.</param>
        /// <param name="classId">Initial value of the ClassId property.</param>
        /// <param name="seriesId">Initial value of the SeriesId property.</param>
        public static SeriesClass CreateSeriesClass(global::System.Int32 seriesClassId, global::System.Int32 classId, global::System.Int32 seriesId)
        {
            SeriesClass seriesClass = new SeriesClass();
            seriesClass.SeriesClassId = seriesClassId;
            seriesClass.ClassId = classId;
            seriesClass.SeriesId = seriesId;
            return seriesClass;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SeriesClassId
        {
            get
            {
                return _SeriesClassId;
            }
            set
            {
                if (_SeriesClassId != value)
                {
                    OnSeriesClassIdChanging(value);
                    ReportPropertyChanging("SeriesClassId");
                    _SeriesClassId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SeriesClassId");
                    OnSeriesClassIdChanged();
                }
            }
        }
        private global::System.Int32 _SeriesClassId;
        partial void OnSeriesClassIdChanging(global::System.Int32 value);
        partial void OnSeriesClassIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClassId
        {
            get
            {
                return _ClassId;
            }
            set
            {
                OnClassIdChanging(value);
                ReportPropertyChanging("ClassId");
                _ClassId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClassId");
                OnClassIdChanged();
            }
        }
        private global::System.Int32 _ClassId;
        partial void OnClassIdChanging(global::System.Int32 value);
        partial void OnClassIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SeriesId
        {
            get
            {
                return _SeriesId;
            }
            set
            {
                OnSeriesIdChanging(value);
                ReportPropertyChanging("SeriesId");
                _SeriesId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SeriesId");
                OnSeriesIdChanged();
            }
        }
        private global::System.Int32 _SeriesId;
        partial void OnSeriesIdChanging(global::System.Int32 value);
        partial void OnSeriesIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK_SeriesClass_Series", "Series")]
        public Series Series
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Series>("Core.FK_SeriesClass_Series", "Series").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Series>("Core.FK_SeriesClass_Series", "Series").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Series> SeriesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Series>("Core.FK_SeriesClass_Series", "Series");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Series>("Core.FK_SeriesClass_Series", "Series", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK_SeriesClass_Class", "Class")]
        public Class Class
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Class>("Core.FK_SeriesClass_Class", "Class").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Class>("Core.FK_SeriesClass_Class", "Class").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Class> ClassReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Class>("Core.FK_SeriesClass_Class", "Class");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Class>("Core.FK_SeriesClass_Class", "Class", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Core", Name="State")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class State : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new State object.
        /// </summary>
        /// <param name="stateId">Initial value of the StateId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        public static State CreateState(global::System.Int32 stateId, global::System.String name, global::System.String code)
        {
            State state = new State();
            state.StateId = stateId;
            state.Name = name;
            state.Code = code;
            return state;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StateId
        {
            get
            {
                return _StateId;
            }
            set
            {
                if (_StateId != value)
                {
                    OnStateIdChanging(value);
                    ReportPropertyChanging("StateId");
                    _StateId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StateId");
                    OnStateIdChanged();
                }
            }
        }
        private global::System.Int32 _StateId;
        partial void OnStateIdChanging(global::System.Int32 value);
        partial void OnStateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();

        #endregion
    
    }

    #endregion
    
}
